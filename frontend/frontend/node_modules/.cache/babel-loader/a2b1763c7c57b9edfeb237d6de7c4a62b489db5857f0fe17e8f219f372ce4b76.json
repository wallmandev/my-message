{"ast":null,"code":"var _jsxFileName = \"/Users/christofferwallman/message-board/frontend/frontend/src/Home.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport './App.css'; // Importera din CSS-fil om du har en\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst apiBaseUrl = 'https://4m1f9x7927.execute-api.eu-north-1.amazonaws.com/dev';\nfunction Home() {\n  _s();\n  // State för att lagra användarens input\n  const [newMessage, setNewMessage] = useState({\n    username: '',\n    text: ''\n  });\n  const navigate = useNavigate(); // Använd useNavigate för navigering\n\n  // Funktion för att skicka ett nytt meddelande\n  const postMessage = async () => {\n    // Kontrollera att meddelandet inte är tomt\n    if (newMessage.text.trim() === '') {\n      alert('Meddelandet kan inte vara tomt');\n      return;\n    }\n\n    // Kontrollera att användarnamnet inte är tomt\n    if (newMessage.username.trim() === '') {\n      alert('Användarnamnet kan inte vara tomt');\n      return;\n    }\n    try {\n      // Skicka det nya meddelandet till servern\n      await axios.post(`${apiBaseUrl}/messages`, newMessage, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n\n      // Återställ inmatningsfälten\n      setNewMessage({\n        username: '',\n        text: ''\n      });\n\n      // Navigera till sidan med alla meddelanden\n      navigate('/messages');\n    } catch (error) {\n      console.error('Error posting message:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Skapa ett meddelande\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Anv\\xE4ndarnamn\",\n      value: newMessage.username,\n      onChange: e => setNewMessage({\n        ...newMessage,\n        username: e.target.value\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      placeholder: \"Ditt meddelande\",\n      value: newMessage.text,\n      onChange: e => setNewMessage({\n        ...newMessage,\n        text: e.target.value\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: postMessage,\n      children: \"Publicera\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(Home, \"KwqmBsOF6yyWmv9RYbZ8lCCkusA=\", false, function () {\n  return [useNavigate];\n});\n_c = Home;\nexport default Home;\n\n// import React, { useState } from 'react';\n// import { useNavigate } from 'react-router-dom'; // Använd useNavigate istället för useHistory\n// import axios from 'axios';\n// import './App.css'; // Importera stilblad om du har ett sådant\n\n// const apiBaseUrl = 'https://kyacy3wdag.execute-api.eu-north-1.amazonaws.com/dev'; // Ersätt med din API URL\n\n// function Home() {\n//   // State för att lagra användarens input\n//   const [newMessage, setNewMessage] = useState({ username: '', text: '' });\n//   const navigate = useNavigate(); // Använd useNavigate istället för useHistory\n\n//   // Funktion för att skicka ett nytt meddelande\n//   const postMessage = async () => {\n//     // Kontrollera att meddelandet inte är tomt\n//     if (newMessage.text.trim() === '') {\n//       alert('Meddelandet kan inte vara tomt');\n//       return;\n//     }\n\n//     // Kontrollera att användarnamnet inte är tomt\n//     if (newMessage.username.trim() === '') {\n//       alert('Användarnamnet kan inte vara tomt');\n//       return;\n//     }\n\n//     try {\n//       // Skicka det nya meddelandet till servern\n//       await axios.post(`${apiBaseUrl}/messages`, newMessage);\n\n//       // Återställ inmatningsfälten\n//       setNewMessage({ username: '', text: '' });\n\n//       // Navigera till sidan med alla meddelanden\n//       navigate('/messages'); // Använd navigate istället för history.push\n//     } catch (error) {\n//       console.error('Error posting message:', error);\n//     }\n//   };\n\n//   return (\n//     <div className=\"home-container\">\n//       <h1>Skapa ett meddelande</h1>\n\n//       {/* Inmatningsfält för användarnamn */}\n//       <input\n//         type=\"text\"\n//         placeholder=\"Användarnamn\"\n//         value={newMessage.username}\n//         onChange={(e) => setNewMessage({ ...newMessage, username: e.target.value })}\n//       />\n\n//       {/* Textfält för meddelande */}\n//       <textarea\n//         placeholder=\"Ditt meddelande\"\n//         value={newMessage.text}\n//         onChange={(e) => setNewMessage({ ...newMessage, text: e.target.value })}\n//       />\n\n//       {/* Knapp för att skicka meddelandet */}\n//       <button onClick={postMessage}>Publicera</button>\n//     </div>\n//   );\n// }\n\n// export default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useNavigate","axios","jsxDEV","_jsxDEV","apiBaseUrl","Home","_s","newMessage","setNewMessage","username","text","navigate","postMessage","trim","alert","post","headers","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/Users/christofferwallman/message-board/frontend/frontend/src/Home.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport './App.css'; // Importera din CSS-fil om du har en\n\nconst apiBaseUrl = 'https://4m1f9x7927.execute-api.eu-north-1.amazonaws.com/dev';\n\nfunction Home() {\n  // State för att lagra användarens input\n  const [newMessage, setNewMessage] = useState({ username: '', text: '' });\n  const navigate = useNavigate(); // Använd useNavigate för navigering\n\n  // Funktion för att skicka ett nytt meddelande\n  const postMessage = async () => {\n    // Kontrollera att meddelandet inte är tomt\n    if (newMessage.text.trim() === '') {\n      alert('Meddelandet kan inte vara tomt');\n      return;\n    }\n\n    // Kontrollera att användarnamnet inte är tomt\n    if (newMessage.username.trim() === '') {\n      alert('Användarnamnet kan inte vara tomt');\n      return;\n    }\n\n    try {\n      // Skicka det nya meddelandet till servern\n      await axios.post(`${apiBaseUrl}/messages`, newMessage, {\n        headers: {\n          'Content-Type': 'application/json',\n        }\n      });\n      \n      // Återställ inmatningsfälten\n      setNewMessage({ username: '', text: '' });\n      \n      // Navigera till sidan med alla meddelanden\n      navigate('/messages');\n    } catch (error) {\n      console.error('Error posting message:', error);\n    }\n  };\n\n  return (\n    <div className=\"home-container\">\n      <h1>Skapa ett meddelande</h1>\n      \n      {/* Inmatningsfält för användarnamn */}\n      <input\n        type=\"text\"\n        placeholder=\"Användarnamn\"\n        value={newMessage.username}\n        onChange={(e) => setNewMessage({ ...newMessage, username: e.target.value })}\n      />\n      \n      {/* Textfält för meddelande */}\n      <textarea\n        placeholder=\"Ditt meddelande\"\n        value={newMessage.text}\n        onChange={(e) => setNewMessage({ ...newMessage, text: e.target.value })}\n      />\n\n      {/* Knapp för att skicka meddelandet */}\n      <button onClick={postMessage}>Publicera</button>\n    </div>\n  );\n}\n\nexport default Home;\n\n\n// import React, { useState } from 'react';\n// import { useNavigate } from 'react-router-dom'; // Använd useNavigate istället för useHistory\n// import axios from 'axios';\n// import './App.css'; // Importera stilblad om du har ett sådant\n\n// const apiBaseUrl = 'https://kyacy3wdag.execute-api.eu-north-1.amazonaws.com/dev'; // Ersätt med din API URL\n\n// function Home() {\n//   // State för att lagra användarens input\n//   const [newMessage, setNewMessage] = useState({ username: '', text: '' });\n//   const navigate = useNavigate(); // Använd useNavigate istället för useHistory\n\n//   // Funktion för att skicka ett nytt meddelande\n//   const postMessage = async () => {\n//     // Kontrollera att meddelandet inte är tomt\n//     if (newMessage.text.trim() === '') {\n//       alert('Meddelandet kan inte vara tomt');\n//       return;\n//     }\n\n//     // Kontrollera att användarnamnet inte är tomt\n//     if (newMessage.username.trim() === '') {\n//       alert('Användarnamnet kan inte vara tomt');\n//       return;\n//     }\n\n//     try {\n//       // Skicka det nya meddelandet till servern\n//       await axios.post(`${apiBaseUrl}/messages`, newMessage);\n      \n//       // Återställ inmatningsfälten\n//       setNewMessage({ username: '', text: '' });\n      \n//       // Navigera till sidan med alla meddelanden\n//       navigate('/messages'); // Använd navigate istället för history.push\n//     } catch (error) {\n//       console.error('Error posting message:', error);\n//     }\n//   };\n\n//   return (\n//     <div className=\"home-container\">\n//       <h1>Skapa ett meddelande</h1>\n      \n//       {/* Inmatningsfält för användarnamn */}\n//       <input\n//         type=\"text\"\n//         placeholder=\"Användarnamn\"\n//         value={newMessage.username}\n//         onChange={(e) => setNewMessage({ ...newMessage, username: e.target.value })}\n//       />\n      \n//       {/* Textfält för meddelande */}\n//       <textarea\n//         placeholder=\"Ditt meddelande\"\n//         value={newMessage.text}\n//         onChange={(e) => setNewMessage({ ...newMessage, text: e.target.value })}\n//       />\n\n//       {/* Knapp för att skicka meddelandet */}\n//       <button onClick={postMessage}>Publicera</button>\n//     </div>\n//   );\n// }\n\n// export default Home;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}