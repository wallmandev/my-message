{"ast":null,"code":"import React,{useState}from'react';import{useNavigate}from'react-router-dom';import axios from'axios';import'./Home.css';// Importera din CSS-fil om du har en\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const apiBaseUrl='https://4m1f9x7927.execute-api.eu-north-1.amazonaws.com/dev';function Home(){// State för att lagra användarens input\nconst[newMessage,setNewMessage]=useState({username:'',text:''});const navigate=useNavigate();// Använd useNavigate för navigering\n// Funktion för att skicka ett nytt meddelande\nconst postMessage=async()=>{// Kontrollera att meddelandet inte är tomt\nif(newMessage.text.trim()===''){alert('Meddelandet kan inte vara tomt');return;}// Kontrollera att användarnamnet inte är tomt\nif(newMessage.username.trim()===''){alert('Användarnamnet kan inte vara tomt');return;}try{// Skicka det nya meddelandet till servern\nawait axios.post(`${apiBaseUrl}/messages`,newMessage,{headers:{'Content-Type':'application/json'}});// Återställ inmatningsfälten\nsetNewMessage({username:'',text:''});// Navigera till sidan med alla meddelanden\nnavigate('/messages');}catch(error){console.error('Error posting message:',error);}};return/*#__PURE__*/_jsx(\"div\",{className:\"holder\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"home-container\",children:[/*#__PURE__*/_jsx(\"textarea\",{className:\"home-message\",placeholder:\"Ditt meddelande\",value:newMessage.text,onChange:e=>setNewMessage({...newMessage,text:e.target.value})}),/*#__PURE__*/_jsx(\"input\",{className:\"home-user\",type:\"text\",placeholder:\"Anv\\xE4ndarnamn\",value:newMessage.username,onChange:e=>setNewMessage({...newMessage,username:e.target.value})}),/*#__PURE__*/_jsx(\"button\",{onClick:postMessage,className:\"home-button\",children:\"Publicera\"})]})});}export default Home;// import React, { useState } from 'react';\n// import { useNavigate } from 'react-router-dom'; // Använd useNavigate istället för useHistory\n// import axios from 'axios';\n// import './App.css'; // Importera stilblad om du har ett sådant\n// const apiBaseUrl = 'https://kyacy3wdag.execute-api.eu-north-1.amazonaws.com/dev'; // Ersätt med din API URL\n// function Home() {\n//   // State för att lagra användarens input\n//   const [newMessage, setNewMessage] = useState({ username: '', text: '' });\n//   const navigate = useNavigate(); // Använd useNavigate istället för useHistory\n//   // Funktion för att skicka ett nytt meddelande\n//   const postMessage = async () => {\n//     // Kontrollera att meddelandet inte är tomt\n//     if (newMessage.text.trim() === '') {\n//       alert('Meddelandet kan inte vara tomt');\n//       return;\n//     }\n//     // Kontrollera att användarnamnet inte är tomt\n//     if (newMessage.username.trim() === '') {\n//       alert('Användarnamnet kan inte vara tomt');\n//       return;\n//     }\n//     try {\n//       // Skicka det nya meddelandet till servern\n//       await axios.post(`${apiBaseUrl}/messages`, newMessage);\n//       // Återställ inmatningsfälten\n//       setNewMessage({ username: '', text: '' });\n//       // Navigera till sidan med alla meddelanden\n//       navigate('/messages'); // Använd navigate istället för history.push\n//     } catch (error) {\n//       console.error('Error posting message:', error);\n//     }\n//   };\n//   return (\n//     <div className=\"home-container\">\n//       <h1>Skapa ett meddelande</h1>\n//       {/* Inmatningsfält för användarnamn */}\n//       <input\n//         type=\"text\"\n//         placeholder=\"Användarnamn\"\n//         value={newMessage.username}\n//         onChange={(e) => setNewMessage({ ...newMessage, username: e.target.value })}\n//       />\n//       {/* Textfält för meddelande */}\n//       <textarea\n//         placeholder=\"Ditt meddelande\"\n//         value={newMessage.text}\n//         onChange={(e) => setNewMessage({ ...newMessage, text: e.target.value })}\n//       />\n//       {/* Knapp för att skicka meddelandet */}\n//       <button onClick={postMessage}>Publicera</button>\n//     </div>\n//   );\n// }\n// export default Home;","map":{"version":3,"names":["React","useState","useNavigate","axios","jsx","_jsx","jsxs","_jsxs","apiBaseUrl","Home","newMessage","setNewMessage","username","text","navigate","postMessage","trim","alert","post","headers","error","console","className","children","placeholder","value","onChange","e","target","type","onClick"],"sources":["/Users/christofferwallman/message-board/frontend/frontend/src/Home.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport './Home.css'; // Importera din CSS-fil om du har en\n\nconst apiBaseUrl = 'https://4m1f9x7927.execute-api.eu-north-1.amazonaws.com/dev';\n\nfunction Home() {\n  // State för att lagra användarens input\n  const [newMessage, setNewMessage] = useState({ username: '', text: '' });\n  const navigate = useNavigate(); // Använd useNavigate för navigering\n\n  // Funktion för att skicka ett nytt meddelande\n  const postMessage = async () => {\n    // Kontrollera att meddelandet inte är tomt\n    if (newMessage.text.trim() === '') {\n      alert('Meddelandet kan inte vara tomt');\n      return;\n    }\n\n    // Kontrollera att användarnamnet inte är tomt\n    if (newMessage.username.trim() === '') {\n      alert('Användarnamnet kan inte vara tomt');\n      return;\n    }\n\n    try {\n      // Skicka det nya meddelandet till servern\n      await axios.post(`${apiBaseUrl}/messages`, newMessage, {\n        headers: {\n          'Content-Type': 'application/json',\n        }\n      });\n      \n      // Återställ inmatningsfälten\n      setNewMessage({ username: '', text: '' });\n      \n      // Navigera till sidan med alla meddelanden\n      navigate('/messages');\n    } catch (error) {\n      console.error('Error posting message:', error);\n    }\n  };\n\n  return (\n    <div className=\"holder\">\n        <div className=\"home-container\">\n        {/* Inmatningsfält för användarnamn */}\n        \n        {/* Textfält för meddelande */}\n        <textarea className=\"home-message\"\n            placeholder=\"Ditt meddelande\"\n            value={newMessage.text}\n            onChange={(e) => setNewMessage({ ...newMessage, text: e.target.value })}\n        />\n        <input className=\"home-user\"\n            type=\"text\"\n            placeholder=\"Användarnamn\"\n            value={newMessage.username}\n            onChange={(e) => setNewMessage({ ...newMessage, username: e.target.value })}\n        />\n\n        {/* Knapp för att skicka meddelandet */}\n        <button onClick={postMessage} className=\"home-button\">Publicera</button>\n        </div>\n    </div>\n  );\n}\n\nexport default Home;\n\n\n// import React, { useState } from 'react';\n// import { useNavigate } from 'react-router-dom'; // Använd useNavigate istället för useHistory\n// import axios from 'axios';\n// import './App.css'; // Importera stilblad om du har ett sådant\n\n// const apiBaseUrl = 'https://kyacy3wdag.execute-api.eu-north-1.amazonaws.com/dev'; // Ersätt med din API URL\n\n// function Home() {\n//   // State för att lagra användarens input\n//   const [newMessage, setNewMessage] = useState({ username: '', text: '' });\n//   const navigate = useNavigate(); // Använd useNavigate istället för useHistory\n\n//   // Funktion för att skicka ett nytt meddelande\n//   const postMessage = async () => {\n//     // Kontrollera att meddelandet inte är tomt\n//     if (newMessage.text.trim() === '') {\n//       alert('Meddelandet kan inte vara tomt');\n//       return;\n//     }\n\n//     // Kontrollera att användarnamnet inte är tomt\n//     if (newMessage.username.trim() === '') {\n//       alert('Användarnamnet kan inte vara tomt');\n//       return;\n//     }\n\n//     try {\n//       // Skicka det nya meddelandet till servern\n//       await axios.post(`${apiBaseUrl}/messages`, newMessage);\n      \n//       // Återställ inmatningsfälten\n//       setNewMessage({ username: '', text: '' });\n      \n//       // Navigera till sidan med alla meddelanden\n//       navigate('/messages'); // Använd navigate istället för history.push\n//     } catch (error) {\n//       console.error('Error posting message:', error);\n//     }\n//   };\n\n//   return (\n//     <div className=\"home-container\">\n//       <h1>Skapa ett meddelande</h1>\n      \n//       {/* Inmatningsfält för användarnamn */}\n//       <input\n//         type=\"text\"\n//         placeholder=\"Användarnamn\"\n//         value={newMessage.username}\n//         onChange={(e) => setNewMessage({ ...newMessage, username: e.target.value })}\n//       />\n      \n//       {/* Textfält för meddelande */}\n//       <textarea\n//         placeholder=\"Ditt meddelande\"\n//         value={newMessage.text}\n//         onChange={(e) => setNewMessage({ ...newMessage, text: e.target.value })}\n//       />\n\n//       {/* Knapp för att skicka meddelandet */}\n//       <button onClick={postMessage}>Publicera</button>\n//     </div>\n//   );\n// }\n\n// export default Home;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,OAASC,WAAW,KAAQ,kBAAkB,CAC9C,MAAO,CAAAC,KAAK,KAAM,OAAO,CACzB,MAAO,YAAY,CAAE;AAAA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAErB,KAAM,CAAAC,UAAU,CAAG,6DAA6D,CAEhF,QAAS,CAAAC,IAAIA,CAAA,CAAG,CACd;AACA,KAAM,CAACC,UAAU,CAAEC,aAAa,CAAC,CAAGV,QAAQ,CAAC,CAAEW,QAAQ,CAAE,EAAE,CAAEC,IAAI,CAAE,EAAG,CAAC,CAAC,CACxE,KAAM,CAAAC,QAAQ,CAAGZ,WAAW,CAAC,CAAC,CAAE;AAEhC;AACA,KAAM,CAAAa,WAAW,CAAG,KAAAA,CAAA,GAAY,CAC9B;AACA,GAAIL,UAAU,CAACG,IAAI,CAACG,IAAI,CAAC,CAAC,GAAK,EAAE,CAAE,CACjCC,KAAK,CAAC,gCAAgC,CAAC,CACvC,OACF,CAEA;AACA,GAAIP,UAAU,CAACE,QAAQ,CAACI,IAAI,CAAC,CAAC,GAAK,EAAE,CAAE,CACrCC,KAAK,CAAC,mCAAmC,CAAC,CAC1C,OACF,CAEA,GAAI,CACF;AACA,KAAM,CAAAd,KAAK,CAACe,IAAI,CAAC,GAAGV,UAAU,WAAW,CAAEE,UAAU,CAAE,CACrDS,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CACF,CAAC,CAAC,CAEF;AACAR,aAAa,CAAC,CAAEC,QAAQ,CAAE,EAAE,CAAEC,IAAI,CAAE,EAAG,CAAC,CAAC,CAEzC;AACAC,QAAQ,CAAC,WAAW,CAAC,CACvB,CAAE,MAAOM,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,CAAEA,KAAK,CAAC,CAChD,CACF,CAAC,CAED,mBACEf,IAAA,QAAKiB,SAAS,CAAC,QAAQ,CAAAC,QAAA,cACnBhB,KAAA,QAAKe,SAAS,CAAC,gBAAgB,CAAAC,QAAA,eAI/BlB,IAAA,aAAUiB,SAAS,CAAC,cAAc,CAC9BE,WAAW,CAAC,iBAAiB,CAC7BC,KAAK,CAAEf,UAAU,CAACG,IAAK,CACvBa,QAAQ,CAAGC,CAAC,EAAKhB,aAAa,CAAC,CAAE,GAAGD,UAAU,CAAEG,IAAI,CAAEc,CAAC,CAACC,MAAM,CAACH,KAAM,CAAC,CAAE,CAC3E,CAAC,cACFpB,IAAA,UAAOiB,SAAS,CAAC,WAAW,CACxBO,IAAI,CAAC,MAAM,CACXL,WAAW,CAAC,iBAAc,CAC1BC,KAAK,CAAEf,UAAU,CAACE,QAAS,CAC3Bc,QAAQ,CAAGC,CAAC,EAAKhB,aAAa,CAAC,CAAE,GAAGD,UAAU,CAAEE,QAAQ,CAAEe,CAAC,CAACC,MAAM,CAACH,KAAM,CAAC,CAAE,CAC/E,CAAC,cAGFpB,IAAA,WAAQyB,OAAO,CAAEf,WAAY,CAACO,SAAS,CAAC,aAAa,CAAAC,QAAA,CAAC,WAAS,CAAQ,CAAC,EACnE,CAAC,CACL,CAAC,CAEV,CAEA,cAAe,CAAAd,IAAI,CAGnB;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}